basePath: /v1
definitions:
  domain.Product:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    type: object
  domain.User:
    properties:
      email:
        type: string
      favorite_phrase:
        type: string
      fullname:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  presenter.SuccessResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost
info:
  contact:
    email: ubai@codespace.id
    name: Ubaidillah Hakim Fadly
    url: https://ubed.dev
  description: This is a golang clean architecture boilerplate using fiber
  license:
    name: MIT License
    url: https://github.com/satria-research/go-clarch?tab=MIT-1-ov-file
  title: Go Clarch Boilerplate
  version: "1.0"
paths:
  /products:
    post:
      consumes:
      - application/json
      description: Create new product
      parameters:
      - description: body payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/presenter.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.Product'
              type: object
      security:
      - JWT: []
      summary: Create new product
      tags:
      - Products
  /users:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: body payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/presenter.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.User'
              type: object
      security:
      - JWT: []
      summary: Create new user
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  JWT:
    description: JWT security accessToken. Please add it in the format "Bearer {AccessToken}"
      to authorize your requests.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
